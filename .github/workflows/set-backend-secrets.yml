name: Set Backend Secrets from Existing Storage

on:
  workflow_dispatch:

jobs:
  set-secrets:
    environment: n8n_bs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Existing Storage Account Info
        run: |
          echo "==================== FINDING TERRAFORM BACKEND STORAGE ===================="

          # Find the storage account that starts with 'n8ntfstate'
          STORAGE_ACCOUNT_NAME=$(az storage account list \
            --resource-group n8n_bs \
            --query "[?starts_with(name, 'n8ntfstate')].name" -o tsv | head -n1)

          if [ -z "$STORAGE_ACCOUNT_NAME" ]; then
            echo "❌ ERROR: No storage account starting with 'n8ntfstate' found in resource group n8n_bs"
            echo ""
            echo "Available storage accounts:"
            az storage account list --resource-group n8n_bs --query "[].name" -o tsv
            exit 1
          fi

          echo "✅ Found storage account: $STORAGE_ACCOUNT_NAME"

          # Get storage account key
          STORAGE_ACCOUNT_KEY=$(az storage account keys list \
            --resource-group n8n_bs \
            --account-name "$STORAGE_ACCOUNT_NAME" \
            --query '[0].value' -o tsv)

          echo "✅ Retrieved storage account key"

          # Check if container exists, create if not
          echo "Checking for 'tfstate' container..."
          if ! az storage container exists \
            --name tfstate \
            --account-name "$STORAGE_ACCOUNT_NAME" \
            --account-key "$STORAGE_ACCOUNT_KEY" \
            --query exists -o tsv | grep -q true; then

            echo "Creating 'tfstate' container..."
            az storage container create \
              --name tfstate \
              --account-name "$STORAGE_ACCOUNT_NAME" \
              --account-key "$STORAGE_ACCOUNT_KEY" \
              --auth-mode key
            echo "✅ Container created"
          else
            echo "✅ Container 'tfstate' already exists"
          fi

          echo ""
          echo "==================== SETTING GITHUB SECRETS ===================="

          # Install gh CLI if not available
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
          fi

          # Set secrets using gh CLI
          echo "$STORAGE_ACCOUNT_NAME" | gh secret set TERRAFORM_BACKEND_STORAGE_ACCOUNT --env n8n_bs
          echo "✅ Set TERRAFORM_BACKEND_STORAGE_ACCOUNT = $STORAGE_ACCOUNT_NAME"

          echo "$STORAGE_ACCOUNT_KEY" | gh secret set TERRAFORM_BACKEND_ACCESS_KEY --env n8n_bs
          echo "✅ Set TERRAFORM_BACKEND_ACCESS_KEY (hidden)"

          echo ""
          echo "==================== SETUP COMPLETE ===================="
          echo ""
          echo "✅ GitHub secrets configured successfully!"
          echo ""
          echo "Backend Configuration:"
          echo "  Storage Account: $STORAGE_ACCOUNT_NAME"
          echo "  Container: tfstate"
          echo "  Resource Group: n8n_bs"
          echo ""
          echo "You can now run:"
          echo "  1. Import Existing Resources to Terraform State"
          echo "  2. Apply Python Task Runner - External Mode"
        env:
          GH_TOKEN: ${{ github.token }}
